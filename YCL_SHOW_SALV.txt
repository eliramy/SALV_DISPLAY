class YCL_SHOW_SALV definition
  public
  create public .

public section.

  class-methods SHOW_SALV
    importing
      !IV_TITLE type LVC_TITLE
      !IV_REPORT type SYREPID
      !IV_VARIANT type SLIS_VARI optional
      !IV_HANDLE type SLIS_HANDL optional
      !IR_SALV type ref to DATA
      !IT_COL_SETTING type YCOL_SETTING_T optional .
  PROTECTED SECTION.
private section.

  class-data GO_SALV_TABLE type ref to CL_SALV_TABLE .

  class-methods SET_SALV_FRAMEWORK
    importing
      !IR_SALV type DATA .
  class-methods SET_FUNCTIONS .
  class-methods SET_COLUMNS
    importing
      !IT_COL_SETTING type YCOL_SETTING_T .
  class-methods SET_DISPLAY
    importing
      !IV_TITLE type LVC_TITLE
      !IV_REPORT type SYREPID
      !IV_VARIANT type SLIS_VARI
      !IV_HANDLE type SLIS_HANDL .
ENDCLASS.



CLASS YCL_SHOW_SALV IMPLEMENTATION.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Private Method YCL_SHOW_SALV=>SET_COLUMNS
* +-------------------------------------------------------------------------------------------------+
* | [--->] IT_COL_SETTING                 TYPE        YCOL_SETTING_T
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD set_columns.

    FIELD-SYMBOLS:
      <fs_col_setting> TYPE ycol_setting_s.

    DATA:
      lo_column TYPE REF TO cl_salv_column_table.

    DATA(lo_columns) = go_salv_table->get_columns( ).           "Get columns setting
    lo_columns->set_optimize( ).                                "Set optimize columns
    DATA(lo_aggregations) = go_salv_table->get_aggregations( ). "Get ALV Aggregations

    LOOP AT it_col_setting ASSIGNING <fs_col_setting>.

      TRY.
          lo_column ?= lo_columns->get_column( <fs_col_setting>-col ).

        CATCH cx_salv_not_found.

      ENDTRY.

* Set on/off Key field
      lo_column->set_key( <fs_col_setting>-key ).

* Hide technical column
      CASE <fs_col_setting>-tech.
        WHEN abap_true.
          lo_column->set_technical( if_salv_c_bool_sap=>true ).
      ENDCASE.

* Hide column
      CASE <fs_col_setting>-hide.
        WHEN abap_true.
          lo_column->set_visible( if_salv_c_bool_sap=>false ).

      ENDCASE.

* Set leading zero
      CASE <fs_col_setting>-zero.
        WHEN abap_true.
          lo_column->set_zero( value = abap_true ).

        WHEN abap_false.
          lo_column->set_zero( value = abap_false ).
      ENDCASE.

* Set alignment
      IF <fs_col_setting>-alignment IS NOT INITIAL.
        lo_column->set_alignment( value = <fs_col_setting>-alignment ).
      ENDIF.

* Set total sum
      IF <fs_col_setting>-sum_total = abap_true.
        TRY.
            lo_aggregations->add_aggregation(
              EXPORTING
                columnname  = <fs_col_setting>-col            " ALV Control: Field Name of Internal Table Field
                aggregation = if_salv_c_aggregation=>total ). " Aggregation

          CATCH cx_salv_data_error.
          CATCH cx_salv_not_found.
          CATCH cx_salv_existing.

        ENDTRY.

      ENDIF.

* Set color
      lo_column->set_color( <fs_col_setting>-color ).

    ENDLOOP.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Private Method YCL_SHOW_SALV=>SET_DISPLAY
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_TITLE                       TYPE        LVC_TITLE
* | [--->] IV_REPORT                      TYPE        SYREPID
* | [--->] IV_VARIANT                     TYPE        SLIS_VARI
* | [--->] IV_HANDLE                      TYPE        SLIS_HANDL
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD set_display.

* Display setting
    DATA:
      lo_display_setting TYPE REF TO cl_salv_display_settings.

    lo_display_setting = go_salv_table->get_display_settings( ).
    lo_display_setting->set_list_header( value = iv_title ). "Set SALV header title
    lo_display_setting->set_striped_pattern( cl_salv_display_settings=>true ). "Colors striped

* Layout setting
    DATA:
      lo_layout TYPE REF TO cl_salv_layout,
      ls_key    TYPE salv_s_layout_key.

    lo_layout = go_salv_table->get_layout( ).

    ls_key-report = iv_report.
    ls_key-handle = iv_handle.
    lo_layout->set_key( ls_key ).
    lo_layout->set_save_restriction( if_salv_c_layout=>restrict_none ).
    lo_layout->set_default( value = abap_true ).

    IF iv_variant IS NOT INITIAL.
      lo_layout->set_initial_layout( value =  iv_variant ).
    ENDIF.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Private Method YCL_SHOW_SALV=>SET_FUNCTIONS
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD set_functions.

    DATA:
      lo_functions TYPE REF TO cl_salv_functions_list.

    lo_functions = go_salv_table->get_functions( ).
    lo_functions->set_all( if_salv_c_bool_sap=>true ).

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Private Method YCL_SHOW_SALV=>SET_SALV_FRAMEWORK
* +-------------------------------------------------------------------------------------------------+
* | [--->] IR_SALV                        TYPE        DATA
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD set_salv_framework.

    FIELD-SYMBOLS:
    <fs_tab> TYPE ANY TABLE.

    FREE:
     go_salv_table.

    CLEAR:
      go_salv_table.

    ASSIGN ir_salv->* TO <fs_tab>.

    TRY.
        cl_salv_table=>factory( IMPORTING r_salv_table   = go_salv_table  " Basis Class Simple ALV Tables
                                CHANGING  t_table        = <fs_tab> ).    " Internal table to display
      CATCH cx_salv_msg.

    ENDTRY.

  ENDMETHOD.


* <SIGNATURE>---------------------------------------------------------------------------------------+
* | Static Public Method YCL_SHOW_SALV=>SHOW_SALV
* +-------------------------------------------------------------------------------------------------+
* | [--->] IV_TITLE                       TYPE        LVC_TITLE
* | [--->] IV_REPORT                      TYPE        SYREPID
* | [--->] IV_VARIANT                     TYPE        SLIS_VARI(optional)
* | [--->] IV_HANDLE                      TYPE        SLIS_HANDL(optional)
* | [--->] IR_SALV                        TYPE REF TO DATA
* | [--->] IT_COL_SETTING                 TYPE        YCOL_SETTING_T(optional)
* +--------------------------------------------------------------------------------------</SIGNATURE>
  METHOD show_salv.

* Set SALV Framework
    set_salv_framework( ir_salv = ir_salv ).

* Set default functions setting
    set_functions( ).

* Set default columns setting
    set_columns( it_col_setting = it_col_setting ).

* Set default display setting
    set_display( iv_title   = iv_title
                 iv_report  = iv_report
                 iv_variant = iv_variant
                 iv_handle  = iv_handle ).

* Display SALV
    go_salv_table->display( ).

  ENDMETHOD.
ENDCLASS.
